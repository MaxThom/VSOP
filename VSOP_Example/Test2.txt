
class LinkedList {
    length(a: int32, b: bool, c: int32, d: string, e: int32) : List { new List }
}

class List {

    ll: LinkedList;

    isNil() : bool { true }
    length() : int32 { 0 }
}


class Main {

    test: Main ;

    main() : int32 {


        (new Cons).init(1, new List);
        (new Cons).tail.ll.length(main(), true, (new List).length(), "", 1+(new Cons).head()).isNil();
        print("List has length ").printInt32(2).print("\n");

        main();

        0
    }

    print(txt: string) : Main {
        self
    }

    printInt32(txt: int32) : Main {
        self
    }

}

class Cons {
    head : int32;
    tail : List;

    init(hd : int32, tl : List) : Cons {
        head <- hd;
        tail <- tl;

        let p : Cons <- self in new Cons;

        p <- self;

        self
    }

    head() : int32 { head }
    isNil() : bool { false }

}